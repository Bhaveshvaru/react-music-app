{"version":3,"sources":["util.js","components/Player.js","components/Song.js","data.js","components/LibrarySong.js","components/Library.js","components/Nav.js","App.js","index.js"],"names":["playAudio","isPlaying","audioRef","playPromise","current","play","undefined","then","Player","setSongs","setCurrentSong","songs","currentSong","setIsPlaying","setSongInfo","songInfo","getTime","time","Math","floor","slice","useEffect","newSong","map","song","id","active","skipTrackHandler","direction","currentIndex","findIndex","length","trackAnim","transform","animationPercentage","window","addEventListener","e","key","className","currentTime","style","background","color","value","type","max","duration","min","onChange","target","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","src","cover","alt","name","artist","chillHop","audio","uuidv4","LibrarySong","selectedSong","filter","state","Library","libraryStatus","Nav","setLibraryStatus","faMusic","App","useRef","useState","data","onTimeUpdate","roundedCurrent","round","roundedDuration","animation","ref","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3013bb31.chunk.js","sourcesContent":["export const playAudio =(isPlaying,audioRef)=>{\n    if(isPlaying){\n        const playPromise = audioRef.current.play();\n        if(isPlaying !== undefined){\n            playPromise.then(()=>{\n                audioRef.current.play()\n            })\n        }\n\n        }\n}","import React,{useRef, useState,useEffect} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay,faBookReader, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { playAudio } from \"../util\";\n\nconst Player = ({setSongs,setCurrentSong,songs,currentSong,isPlaying,setIsPlaying,audioRef,setSongInfo,songInfo}) => {\n \n\n    const draghandler = (e)=>{\n        audioRef.current.currentTime = e.target.value;\n        setSongInfo({...songInfo,currentTime:e.target.value})\n    }\n\n   \n\n    const getTime = (time)=>{\n        return(\n            Math.floor(time/60) + \":\" + (\"0\" + Math.floor(time %60)).slice(-2)\n        )\n    }\n\n    //useEffect\n    useEffect(()=>{\n        const newSong = songs.map((song)=>{\n            if(song.id === currentSong.id){\n                return{\n                    ...song,\n                    active:true\n                }\n            }else{\n                return{\n                    ...song,\n                    active:false\n                }\n            }\n        })\n        setSongs(newSong)\n    },[currentSong])\n\n    //skip \n    const skipTrackHandler = (direction)=>{\n        const currentIndex = songs.findIndex((song)=>song.id === currentSong.id)\n\n        //set skip\n        if (direction === 'skip-forward') {\n            setCurrentSong(songs[(currentIndex + 1) % songs.length])\n        } else\n\n        if(direction === 'skip-back'){\n            if((currentIndex - 1)% songs.length === -1){\n            setCurrentSong(songs[songs.length - 1])\n            playAudio(isPlaying,audioRef)\n            return\n            }\n            setCurrentSong(songs[(currentIndex - 1) % songs.length])\n\n        }\n        playAudio(isPlaying,audioRef)\n    }\n\n    const playSongHandler =()=>{\n        if (isPlaying) {\n            audioRef.current.pause();\n            setIsPlaying(!isPlaying);\n        } else {\n            audioRef.current.play();\n            setIsPlaying(!isPlaying);\n        }\n    }\n\n    const trackAnim = {\n        transform: `translateX(${songInfo.animationPercentage}%)`,\n      };\n\n      useEffect(() => {\n        window.addEventListener('keypress', e => {\n          if(e.key === ' '){\n            setIsPlaying(!isPlaying);\n          }\n        });\n      }, [isPlaying]);\n\nreturn(\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div\n          style={{\n            background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n          }}\n          className=\"track\"\n        >\n          <input\n            value={songInfo.currentTime}\n            type=\"range\"\n            max={songInfo.duration || 0}\n            min={0}\n            onChange={draghandler}\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n        <div className=\"play-control\">\n             <FontAwesomeIcon onClick={()=>skipTrackHandler('skip-back')} className=\"skip-back\" size=\"2x\" icon={faAngleLeft}/>\n             <FontAwesomeIcon  onClick={playSongHandler} className=\"play\" size=\"2x\" icon={isPlaying ? faPause : faPlay }/>\n             <FontAwesomeIcon onClick={()=>skipTrackHandler('skip-forward')} className=\"skip-forward\" size=\"2x\" icon={faAngleRight}/>\n        </div>\n    </div>\n)\n}\n\nexport default Player;","import React from \"react\";\n\nconst Song = ({currentSong,isPlaying})=>{\nreturn(\n    <div className=\"song-container\">\n        <img className={` ${isPlaying ?  'imageRot' : ''} `} src={currentSong.cover} alt=\"image\" />\n        <h2>{currentSong.name}</h2>\n        <h3>{currentSong.artist}</h3>\n        \n    </div>\n)\n}\n\nexport default Song","  \nimport { v4 as uuidv4 } from \"uuid\";\nfunction chillHop() {\n  return [\n    {\n      name: \"Beaver Creek\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Daylight\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Keep Going\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Nightfall\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\n      artist: \"Aiguille\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\n      color: [\"#EF8EA9\", \"#ab417f\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Reflection\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\n      artist: \"Swørn\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\n      color: [\"#CD607D\", \"#c94043\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Under the City Stars\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\n      artist: \"Aso, Middle School, Aviino\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\n      color: [\"#205950\", \"#2ab3bf\"],\n      id: uuidv4(),\n      active: false,\n    }, \n    //ADD MORE HERE\n  ];\n}\n\nexport default chillHop;","import React from \"react\";\nimport { playAudio } from \"../util\";\n\n\nconst LibrarySong = ({setSongs,isPlaying,audioRef,song,setCurrentSong,songs ,id})=>{\n   const  clickSongHandler =()=>{\n       const selectedSong = songs.filter((state)=> state.id === id)\n        setCurrentSong(selectedSong[0]);\n        //active state\n        const newSong = songs.map((song)=>{\n            if(song.id === id){\n                return{\n                    ...song,\n                    active:true\n                }\n            }else{\n                return{\n                    ...song,\n                    active:false\n                }\n            }\n        })\n        setSongs(newSong)\n        playAudio(isPlaying,audioRef)\n    }\nreturn(\n    <div onClick={clickSongHandler} \n     className={`library-song ${song.active ? 'selected': \"\"}`} >\n        <img src={song.cover} alt=\"image\" />\n        <div className=\"song-description\">\n        <h2>{song.name}</h2>\n        <h3>{song.artist}</h3>\n        </div>\n    \n    </div>\n)\n}\n\nexport default LibrarySong;","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\"\n\nconst Library = ({setSongs,isPlaying,audioRef,songs,setCurrentSong,libraryStatus})=>{\n\n    return(\n        <div className={`library ${libraryStatus ? 'active-library': ''}`}>\n            <h1>Library</h1>\n            <div className=\"library-songs\">\n                  {songs.map((song) => (\n                    <LibrarySong\n                     songs={songs}\n                     setCurrentSong={setCurrentSong}\n                     song={song}   \n                     key={song.id} \n                     id={song.id}\n                     audioRef={audioRef}\n                     isPlaying={isPlaying}\n                     setSongs={setSongs}\n                    />\n                  ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Library;","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({libraryStatus,setLibraryStatus})=>{\n    return(\n        <nav>\n            <h1>Waves</h1>\n            <button onClick={()=>{setLibraryStatus(!libraryStatus)}}>\n                Library\n            <FontAwesomeIcon icon={faMusic} />   \n            </button>\n        </nav>\n    )\n}\n\nexport default Nav","import React,{useState,useRef} from \"react\"\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport data from \"./data\"\nimport \"./styles/app.scss\"\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n\nfunction App() {\n      //Ref\n      const audioRef = useRef(null)\n  //State\n  const [songs,setSongs] = useState(data())\n  const [currentSong,setCurrentSong] = useState(songs[0])\n  const [isPlaying,setIsPlaying] = useState(false)\n  const [libraryStatus,setLibraryStatus] = useState(false)\n     //State\n     const [songInfo,setSongInfo] = useState({\n      currentTime:0,\n      duration:0,\n      animationPercentage:0\n  })\n  const timeUpdateHandler =(e)=>{\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    const roundedCurrent = Math.round(current)\n    const roundedDuration = Math.round(duration)\n    const animation = Math.round(roundedCurrent / roundedDuration * 100)\n    setSongInfo({...songInfo,currentTime :current,duration,animationPercentage:animation})\n}\n \n  return (\n    <div className={`App ${libraryStatus ?  'library-active':\"\"}`} >\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n        <Song currentSong={currentSong} isPlaying={isPlaying}/>\n        <Player \n        audioRef={audioRef}\n        currentSong={currentSong} \n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n        />\n        <Library libraryStatus={libraryStatus} setSongs={setSongs} isPlaying={isPlaying} audioRef={audioRef} songs={songs} setCurrentSong={setCurrentSong} />\n        <audio onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}